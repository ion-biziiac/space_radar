describe SpaceRadar::Radar do
  it 'finds the matching patterns with the default data' do
    radar = SpaceRadar::Radar.new
    expected_output = <<~DATA
      --------------------oooo---------------------oo-----------------------------------------------------
      -------------------oooooo-------------------oooo----------------------------o-----o-----------------
      ------------------oo-oo-oo-----------------oooooo----------------------------o---o------------------
      ------------------oooooooo----------------oo-oo-oo--------------------------ooooooo-----------------
      --------------------o--o------------------oooooooo-------------------------oo-ooo-oo----------------
      -------------------o-oo-o-------------------o--o--------------------------ooooooooooo---------------
      ------------------o-o--o-o-----------------o-oo-o-------------------------o-ooooooo-o---------------
      ------------------------------------------o-o--o-o------------------------o-o-----o-o---------------
      -----------------------------------------------------------------------------oo-oo------------------
      ----------------------------------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      ---------------------------------------------------------------------------------------o-----o------
      --------------------------------------------------------------o-----o-------------------o---o-------
      ---------------------------------------------------------------o---o-------------------ooooooo------
      --------------------------------------oo----------------------ooooooo-----------------oo-ooo-oo-----
      -------------------------------------oooo--------------------oo-ooo-oo---------------ooooooooooo----
      ------------------------------------oooooo------------------ooooooooooo--------------o-ooooooo-o----
      -----------------------------------oo-oo-oo-----------------o-ooooooo-o--------------o-o-----o-o----
      -----------------------------------oooooooo-----------------o-o-----o-o-----------------oo-oo-------
      -------------------------------------o--o----------------------oo-oo--------------------------------
      ------------------------------------o-oo-o----------------------------------------------------------
      -----------------------------------o-o--o-o---------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      -------------------oo-------------------------------------------------------------------------------
      ------------------oooo------------------------------------------------------------------------------
      -----------------oooooo-----------------------------------------------------------------------------
      ----------------oo-oo-oo----------------------------------------------------------------------------
      ----------------oooooooo----------------------------------------------------------------------------
      ------------------o--o------------------------------------------------------------------------------
      -----------------o-oo-o-----------------------------------------------------------------------------
      ----------------o-o--o-o----------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------
      -------------------------------------------------------------------------------------oo-------------
      ------------------------------------------------------------------------------------oooo------------
      -----------------------------------------------------------------------------------oooooo-----------
      ----------------------------------------------------------------------------------oo-oo-oo----------
      --------------------oo------------------------------------------------------------oooooooo----------
      -------------------oooo-------------------------------------------------------------o--o------------
      ------------------oooooo-----------------------------------------------------------o-oo-o-----------
      -----------------oo-oo-oo---------------------------------------------------------o-o--o-o----------
      -----------------oooooooo---------------------------------------------------------------------------
    DATA

    expect($stdout).to receive(:puts).with("\033[0;32m")
    expect($stdout).to receive(:puts).with(expected_output.strip)

    radar.scan
    radar.draw
  end

  it 'finds the matching patterns with the provided data' do
    radar = SpaceRadar::Radar.new
    expected_output = <<~DATA
      ----------------------------------------
      ----------------------------------------
      ----------------------------------------
      ----------------------------------------
      -------------o--------------------------
      ------------ooo-------------------------
      ----------oo---oo-----------------------
      ----------oo---oo-----------------------
      ----------ooooooo-----------------------
      ----------oo-o-oo-----------------------
      ----------------------------------------
      ----------------------------------------
      ----------------------------------------
      ----------------------------------------
      ----------------------------------------
      ----------------------------------------
      ----------------------------------------
      ----------------------------o-----------
      ---------------------------ooo----------
      -------------------------oo---oo--------
    DATA

    expect(radar)
      .to receive(:fetch_options)
      .and_return(
        {
          '--radar-scan-path' => 'spec/fixtures/radar_scan_40_x_20.txt',
          '--known-items-dir-path' => 'spec/fixtures/known_items'
        }
      )
    expect($stdout).to receive(:puts).with("\033[0;32m")
    expect($stdout).to receive(:puts).with(expected_output.strip)

    radar.scan
    radar.draw
  end

  it 'outputs the data validation errors' do
    radar = SpaceRadar::Radar.new
    expect(radar)
      .to receive(:fetch_options)
      .and_return({ '--known-items-dir-path' => 'spec/fixtures/empty_folder' })
    expect($stdout)
      .to receive(:puts)
      .with('Error: The path spec/fixtures/empty_folder contains no *.txt files')

    radar.scan
  end
end
